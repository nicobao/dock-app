name: Deployment
on: [push]
# on:
#   workflow_dispatch:
#   pull_request:
#     branches:
#       - dev
#     types: [closed]
jobs:
  increment_version:
    runs-on: macos-latest
    name: "Increment app version"
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.GIT_ACCESS_TOKEN }}"

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: Increment app version
        run: |
          yarn increment_version:android
          yarn increment_version:ios

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: (CI) Increment build number
          file_pattern: "*.pbxproj *.plist *.gradle"
          commit_user_name: GitHub Actions Bot
          commit_user_email: github-actions-bot@dock.io
          commit_author: Author <actions@github.com>
          branch: dev

  internal_release_android:
    name: "Android deploy"
    needs: increment_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.GIT_ACCESS_TOKEN }}"

      - name: Get Pull Request Number
        id: pr
        run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: Install and lint
        run: |
          git config --global url."https://".insteadOf git://
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
          yarn install
          yarn postinstall
          git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/docknetwork/react-native-sdk.git" ../wallet-sdk
          yarn --cwd ../wallet-sdk install
          yarn sync-sdk
          yarn build-sdk
          rm -rf ./certs
          git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/docknetwork/dock-app-certs.git" ./certs
          mv ./certs/google-play.json ./
          cp -rf ./certs/google-services.json ./android/app/
          rm -rf ./android/gradle.properties
          cp -rf ./certs/gradle.properties ./android/gradle.properties
          # Pull env variables from certs repo
          # It will inject sentry token in the JS thread
          cp -rf ./certs/.env ./
          rm -rf /tmp/google-play-cert
          cp -rf ./certs/google-play-cert /tmp/google-play-cert
          echo "BUILD_NUMBER=$(node print-build-number)" >> $GITHUB_ENV
          echo "BUILD_TAG=$(node print-build-number|tr -s ' ' '_')" >> $GITHUB_ENV

      - name: Install Fastlane
        run: gem install fastlane

      - name: Release
        env:
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          S3_APP_BUCKET: ${{ secrets.S3_APP_BUCKET }}
          S3_REGION: ${{ secrets.S3_REGION }}
          S3_ANDROID_APK_DIR: ${{ secrets.S3_ANDROID_APK_DIR }}
          S3_ACL: ${{ secrets.S3_ACL }}
          APK_LOCATION: ./release/dock-wallet.apk
        run: |
          cd ./android
          mkdir release
          fastlane package_apk
          cp "app/build/outputs/apk/release/app-release.apk" ${{env.APK_LOCATION}}
          # fastlane submit_to_google
          # fastlane s3_upload

      - name: Send slack notification
        if: always()
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          channel: '#wallet-bot'
          status: ${{ job.status }}
          success_text: 'Android ${env.BUILD_NUMBER} completed successfully'
          failure_text: 'Android build failed'
          cancelled_text: 'Android build was cancelled'
          fields: |
            [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
            { "title": "App version", "value": "${env.BUILD_NUMBER}", "short": true },
            { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
            { "title": "Pull Request", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/pull/${{ steps.pr.outputs.pull_request_number }}"}
            ]

  # internal_release_ios:
  #   name: "iOS deploy"
  #   needs: increment_version
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         token: "${{ secrets.GIT_ACCESS_TOKEN }}"

  #     - name: Get Pull Request Number
  #       id: pr
  #       run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}

  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '16.x'

  #     - name: Run fastlane setup
  #       env:
  #         ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  #         CERTS_REPO_URL: ${{ secrets.CERTS_REPO_URL }}
  #         MATCH_REPO_URL: ${{ secrets.CERTS_REPO_URL }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
  #         FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD:  ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
  #         FASTLANE_APP_IDENTIFIER: ${{ secrets.FASTLANE_APP_IDENTIFIER }}
  #         FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
  #         FASTLANE_APPLE_ID: ${{ secrets.FASTLANE_APPLE_ID }}
  #         FASTLANE_ITC_TEAM_ID: ${{ secrets.FASTLANE_ITC_TEAM_ID }}
  #         FASTLANE_TEAM_ID: ${{ secrets.FASTLANE_TEAM_ID }}
  #         ASC_KEY: ${{ secrets.ASC_KEY }}
  #         ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
  #         ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
  #       run: |
  #         git config --global url."https://".insteadOf git://
  #         xcodebuild -version
  #         yarn install
  #         git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/docknetwork/react-native-sdk.git" ../wallet-sdk
  #         yarn --cwd ../wallet-sdk install
  #         yarn sync-sdk
  #         yarn build-sdk
  #         echo "BUILD_NUMBER=$(node print-build-number)" >> $GITHUB_ENV
  #         git clone "${{ secrets.CERTS_REPO_URL }}" ./certs
  #         # Pull env variables from certs repo
  #         # It will inject sentry token in the JS thread
  #         cp -rf ./certs/.env ./
  #         cp -rf ./certs/GoogleService-Info.plist ./ios/
  #         cd ./ios
  #         pod install
  #         fastlane build_upload_testflight

  #     - name: Send slack notification
  #       if: always()
  #       uses: edge/simple-slack-notify@master
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       with:
  #         channel: '#wallet-bot'
  #         status: ${{ job.status }}
  #         success_text: 'iOS ${env.BUILD_NUMBER} completed successfully'
  #         failure_text: 'iOS build failed'
  #         cancelled_text: 'iOS build was cancelled'
  #         fields: |
  #           [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
  #           { "title": "App version", "value": "${env.BUILD_NUMBER}", "short": true },
  #           { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
  #           { "title": "Pull Request", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/pull/${{ steps.pr.outputs.pull_request_number }}"}
  #           ]
