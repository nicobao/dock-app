// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DIDListScreen should render correctly with list 1`] = `
<RNCSafeAreaView
  accessibilityLabel="DIDListScreen"
  style={
    Object {
      "backgroundColor": "#141417",
      "flex": 1,
    }
  }
  testID="DIDListScreen"
>
  <AppGlobalHeader />
  <Memo(ForwardRef(Box))
    flex={1}
  >
    <Memo(ForwardRef(Box))
      flex={1}
    >
      <Styled(View)>
        <Box
          alignItems="center"
          flexDirection="row"
          marginLeft={22}
          marginRight={22}
        >
          <Box
            flex={1}
          >
            <Styled(Component)
              fontFamily="Montserrat"
              fontSize={24}
              fontWeight="600"
            >
              DIDs
            </Styled(Component)>
          </Box>
          <Box
            row={true}
          >
            <IconButton
              accessibilityLabel="DIDListScreen_Add_DID"
              col={true}
              onPress={[Function]}
              testID="DIDListScreen_Add_DID"
            >
              <SvgFile />
            </IconButton>
          </Box>
        </Box>
      </Styled(View)>
      <ForwardRef
        marginLeft={3}
        marginRight={3}
      >
        <DIDListItem
          accessibilityLabel="DIDListItem_0"
          didDocumentResolution={
            Object {
              "correlation": Array [],
              "didDocument": Object {
                "@context": Array [
                  "https://www.w3.org/ns/did/v1",
                  "https://ns.did.ai/transmute/v1",
                  Object {
                    "@base": "did:key:z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                  },
                ],
                "assertionMethod": Array [
                  "#z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                ],
                "authentication": Array [
                  "#z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                ],
                "capabilityDelegation": Array [
                  "#z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                ],
                "capabilityInvocation": Array [
                  "#z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                ],
                "id": "did:key:z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                "keyAgreement": Array [
                  "#z6LScrLMVd9jvbphPeQkGffSeB99EWSYqAnMg8rGiHCgz5ha",
                ],
                "verificationMethod": Array [
                  Object {
                    "controller": "did:key:z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                    "id": "#z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                    "publicKeyJwk": Object {
                      "crv": "Ed25519",
                      "kty": "OKP",
                      "x": "vGur-MEOrN6GDLf4TBGHDYAERxkmWOjTbztvG3xP0I8",
                    },
                    "type": "JsonWebKey2020",
                  },
                  Object {
                    "controller": "did:key:z6Mks8mvCnVx4HQcoq7ZwvpTbMnoRGudHSiEpXhMf6VW8XMg",
                    "id": "#z6LScrLMVd9jvbphPeQkGffSeB99EWSYqAnMg8rGiHCgz5ha",
                    "publicKeyJwk": Object {
                      "crv": "X25519",
                      "kty": "OKP",
                      "x": "EXXinkMxdA4zGmwpOOpbCXt6Ts6CwyXyEKI3jfHkS3k",
                    },
                    "type": "JsonWebKey2020",
                  },
                ],
              },
              "id": "1657822960364",
              "type": "DIDResolutionResponse",
            }
          }
          key="1657822960364"
          onOptionClicked={[Function]}
          onShare={[Function]}
          testID="DIDListItem_0"
        />
      </ForwardRef>
      <SingleDIDOptionsModal
        didDocumentResolution={null}
        onClose={[Function]}
        onDeleteDID={[MockFunction]}
        visible={false}
      />
      <NewDIDModal
        onClose={[Function]}
        visible={false}
      />
    </Memo(ForwardRef(Box))>
  </Memo(ForwardRef(Box))>
</RNCSafeAreaView>
`;

exports[`DIDListScreen should render correctly without list 1`] = `
<RNCSafeAreaView
  accessibilityLabel="DIDListScreen"
  style={
    Object {
      "backgroundColor": "#141417",
      "flex": 1,
    }
  }
  testID="DIDListScreen"
>
  <AppGlobalHeader />
  <Memo(ForwardRef(Box))
    flex={1}
  >
    <Memo(ForwardRef(Box))
      flex={1}
    >
      <Styled(View)>
        <Box
          alignItems="center"
          flexDirection="row"
          marginLeft={22}
          marginRight={22}
        >
          <Box
            flex={1}
          >
            <Styled(Component)
              fontFamily="Montserrat"
              fontSize={24}
              fontWeight="600"
            >
              DIDs
            </Styled(Component)>
          </Box>
          <Box
            row={true}
          >
            <IconButton
              accessibilityLabel="DIDListScreen_Add_DID"
              col={true}
              onPress={[Function]}
              testID="DIDListScreen_Add_DID"
            >
              <SvgFile />
            </IconButton>
          </Box>
        </Box>
      </Styled(View)>
      <ForwardRef
        marginLeft={3}
        marginRight={3}
      >
        <Memo(ForwardRef(Box))
          mt={70}
        >
          <Memo(ForwardRef(VStack))
            alignItems="center"
            space={7}
          >
            <SvgFile />
            <Styled(Component)
              mt={3}
              textAlign="center"
              variant="didDescription"
            >
              Decentralized Identifiers (DIDs) are a new type of identifier that enables a decentralized digital identity and allows you to accept verifiable credentials.
            </Styled(Component)>
          </Memo(ForwardRef(VStack))>
        </Memo(ForwardRef(Box))>
      </ForwardRef>
      <Styled(Component)
        flex={1}
        marginBottom={114}
        marginLeft={3}
        marginRight={3}
      >
        <BigButton
          accessibilityLabel="CreateNewDID"
          icon={<SvgFile />}
          onPress={[Function]}
          testID="CreateNewDID"
        >
          Create New DID
        </BigButton>
        <BigButton
          accessibilityLabel="ImportExistingDIDBtn"
          icon={<SvgFile />}
          testID="ImportExistingDIDBtn"
        >
          Import existing DID
        </BigButton>
      </Styled(Component)>
      <SingleDIDOptionsModal
        didDocumentResolution={null}
        onClose={[Function]}
        onDeleteDID={[MockFunction]}
        visible={false}
      />
      <NewDIDModal
        onClose={[Function]}
        visible={false}
      />
    </Memo(ForwardRef(Box))>
  </Memo(ForwardRef(Box))>
</RNCSafeAreaView>
`;
