default_platform(:ios)

platform :ios do

  desc "Setup keychain for ci"
  lane :setup do
    setup_project
  end


 private_lane :setup_project do
     create_keychain(
       name: "ci_keychain",
       password: "ci_keychain",
       default_keychain: true,
       unlock: true,
       timeout: 3600,
       lock_when_sleeps: false
     )
 end



 desc "Load ASC API Key information to use in subsequent lanes"
 lane :load_asc_api_key do
   app_store_connect_api_key(
     key_id: ENV["ASC_KEY_ID"],
     issuer_id: ENV["ASC_ISSUER_ID"],
     key_content: ENV["ASC_KEY"],
     is_key_content_base64: true,
     in_house: false
   )
 end


  desc "Check certs and profiles"
  lane :prepare_signing do
      match(
         type: "appstore",
         readonly: true,
         keychain_name: "ci_keychain",
         keychain_password: "ci_keychain"
      )
  end

  desc "Increment ios version"
    lane :increment_version do
      increment_build_number(xcodeproj: "DockApp.xcodeproj")
  end

  desc "Build the iOS app for release"
  lane :build_release do
    build_app(workspace: "DockApp.xcworkspace", scheme: "DockApp")
  end

  desc "Upload to TestFlight / ASC"
  lane :upload_release do
   api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

   upload_to_testflight(
       api_key: api_key,
       skip_waiting_for_build_processing: true
   )
  end

  desc "Send slack message"
  lane :send_message do
    build_number = get_build_number(xcodeproj: "Project.xcodeproj")

   slack(
      message: "iOS App successfully deployed!",
      success: true,
      payload: {
        "Build Date" => Time.new.to_s,
        "Build number" => build_number,
      },
      default_payloads: [:git_branch, :git_author]
    )

  end

  desc "Build and upload to TestFlight"
  lane :build_upload_testflight do
       setup
       load_asc_api_key
       prepare_signing
       build_release
      #  upload_release
  end

  desc "Build without uploading"
  lane :build_no_upload do
       setup
       load_asc_api_key
       prepare_signing
       build_release
  end

    desc "Upload to S3 bucket"
    lane :s3_upload do
          aws_s3(
            access_key:  ENV['S3_ACCESS_KEY'],
            secret_access_key: ENV['S3_SECRET_ACCESS_KEY'],
            bucket:  ENV['S3_APP_BUCKET'],
            region: ENV['S3_REGION'],
            ipa: ENV['IPA_LOCATION'],
            app_directory: ENV['S3_ANDROID_IPA_DIR'],
            upload_metadata: true,
            acl: ENV['S3_ACL'],
            path: ENV['BUILD_TAG'] + "/"
          )

    end
end
